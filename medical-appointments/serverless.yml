service: medical-appointments
frameworkVersion: "4"

provider:
  name: aws
  runtime: nodejs20.x
  region: us-east-1
  environment:
    DYNAMODB_TABLE_NAME: ${self:service}-${sls:stage}
    SNS_TOPIC_ARN:
      Ref: AppointmentSnsTopic
    EVENT_BUS_NAME:
      Ref: AppointmentEventBus
    RDS_HOST: ${env:RDS_HOST}
    RDS_USER: ${env:RDS_USER}
    RDS_PASSWORD: ${env:RDS_PASSWORD}
    RDS_DATABASE_PE: ${env:RDS_DATABASE_PE}
    RDS_DATABASE_CL: ${env:RDS_DATABASE_CL}

functions:
  healthCheck:
    handler: src/handlers/health.handler
    events:
      - httpApi:
          path: /health
          method: GET
  appointment:
    handler: src/handlers/appointment.postAppointment
    events:
      - http:
          path: appointments
          method: post
      - http:
          path: appointments/{insuredId}
          method: get
      - sqs:
          arn:
            Fn::GetAtt:
              - AppointmentConfirmationQueue
              - Arn
  appointment_pe:
    handler: src/handlers/appointment_pe.handler
    events:
      - sqs:
          arn:
            Fn::GetAtt:
              - SqsPeQueue
              - Arn
  appointment_cl:
    handler: src/handlers/appointment_cl.handler
    events:
      - sqs:
          arn:
            Fn::GetAtt:
              - SqsClQueue
              - Arn

resources:
  Resources:
    # DynamoDB table
    AppointmentsDynamoDBTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:service}-${sls:stage}
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
          - AttributeName: insuredId
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        GlobalSecondaryIndexes:
          - IndexName: insuredId-index
            KeySchema:
              - AttributeName: insuredId
                KeyType: HASH
            Projection:
              ProjectionType: ALL
        BillingMode: PAY_PER_REQUEST

    # SQS Queues for PE and CL
    SqsPeQueue:
      Type: AWS::SQS::Queue
      Properties:
        QueueName: ${self:service}-${sls:stage}-SQS_PE
    SqsClQueue:
      Type: AWS::SQS::Queue
      Properties:
        QueueName: ${self:service}-${sls:stage}-SQS_CL

    # SNS Topic
    AppointmentSnsTopic:
      Type: AWS::SNS::Topic
      Properties:
      TopicName: ${self:service}-${sls:stage}-appointments-topic

    # SNS subscriptions with filter policies
    SnsSubscriptionPe:
      Type: AWS::SNS::Subscription
      Properties:
        TopicArn:
          Ref: AppointmentSnsTopic
        Protocol: sqs
        Endpoint:
          Fn::GetAtt: [SqsPeQueue, Arn]
        FilterPolicy:
          countryISO:
            - PE

    SnsSubscriptionCl:
      Type: AWS::SNS::Subscription
      Properties:
        TopicArn:
          Ref: AppointmentSnsTopic
        Protocol: sqs
        Endpoint:
          Fn::GetAtt: [SqsClQueue, Arn]
        FilterPolicy:
          countryISO:
            - CL

    # EventBridge bus
    AppointmentEventBus:
      Type: AWS::Events::EventBus
      Properties:
        Name: ${self:service}-${sls:stage}-eventbus

    # EventBridge Rule to route completed appointments to SQS confirmation queue
    AppointmentEventRule:
      Type: AWS::Events::Rule
      Properties:
        EventBusName:
          Ref: AppointmentEventBus
        EventPattern:
          source:
            - appointment.app
          detail-type:
            - AppointmentCompleted
        Targets:
          - Arn:
              Fn::GetAtt:
                - AppointmentConfirmationQueue
                - Arn
            Id: "AppointmentConfirmationTarget"

    # SQS queue for confirmations
    AppointmentConfirmationQueue:
      Type: AWS::SQS::Queue
      Properties:
        QueueName: ${self:service}-SQS_Confirmations

    # Permissions for SNS to send messages to SQS queues
    SqsPeQueuePolicy:
      Type: AWS::SQS::QueuePolicy
      Properties:
        Queues:
          - Ref: SqsPeQueue
        PolicyDocument:
          Version: "2012-10-17"
          Statement:
            - Effect: Allow
              Principal: "*"
              Action: sqs:SendMessage
              Resource:
                Fn::GetAtt: [SqsPeQueue, Arn]
              Condition:
                ArnEquals:
                  "aws:SourceArn":
                    Ref: AppointmentSnsTopic
    SqsClQueuePolicy:
      Type: AWS::SQS::QueuePolicy
      Properties:
        Queues:
          - Ref: SqsClQueue
        PolicyDocument:
          Version: "2012-10-17"
          Statement:
            - Effect: Allow
              Principal: "*"
              Action: sqs:SendMessage
              Resource:
                Fn::GetAtt: [SqsClQueue, Arn]
              Condition:
                ArnEquals:
                  "aws:SourceArn":
                    Ref: AppointmentSnsTopic
    AppointmentConfirmationQueuePolicy:
      Type: AWS::SQS::QueuePolicy
      Properties:
        Queues:
          - Ref: AppointmentConfirmationQueue
        PolicyDocument:
          Version: "2012-10-17"
          Statement:
            - Effect: Allow
              Principal: "*"
              Action: sqs:SendMessage
              Resource:
                Fn::GetAtt: [AppointmentConfirmationQueue, Arn]
              Condition:
                ArnEquals:
                  "aws:SourceArn":
                    Ref: AppointmentEventBus

service: medical-appointments
frameworkVersion: "4"
configValidationMode: off

provider:
  name: aws
  runtime: nodejs20.x
  region: us-east-1
  environment:
    DYNAMODB_TABLE_NAME: ${self:service}-${sls:stage}
    SNS_TOPIC_ARN:
      Ref: AppointmentSnsTopic
    EVENT_BUS_NAME:
      Ref: AppointmentEventBus
    RDS_HOST: ${env:RDS_HOST}
    RDS_USER: ${env:RDS_USER}
    RDS_PASSWORD: ${env:RDS_PASSWORD}
    RDS_DATABASE_PE: ${env:RDS_DATABASE_PE}
    RDS_DATABASE_CL: ${env:RDS_DATABASE_CL}

plugins:
  - serverless-openapi-documentation
custom:
  documentation: ${file(./serverless.doc.yml):documentation}

functions:
  appointment:
    handler: src/handlers/appointment.appointmentHandler
    role: AppointmentLambdaRole
    events:
      - http:
          path: appointments
          method: post
          documentation: ${file(./serverless.doc.yml):endpoint.appointmentPost}

      - http:
          path: appointments/get
          method: get
          documentation: ${file(./serverless.doc.yml):endpoint.appointmentGet}

  appointment_confirmation:
    handler: src/handlers/appointment_confirmation.processCompletionFromSQS
    role: AppointmentConfirmationLambdaRole
    events:
      - sqs:
          arn:
            Fn::GetAtt:
              - AppointmentConfirmationQueue
              - Arn
  appointment_pe:
    handler: src/handlers/appointment_pe.handler
    role: AppointmentPeLambdaRole
    events:
      - sqs:
          arn:
            Fn::GetAtt:
              - SqsPeQueue
              - Arn
  appointment_cl:
    handler: src/handlers/appointment_cl.handler
    role: AppointmentClLambdaRole
    events:
      - sqs:
          arn:
            Fn::GetAtt:
              - SqsClQueue
              - Arn

resources:
  Resources: ${file(./resources.yml):Resources}
